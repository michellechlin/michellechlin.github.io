<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-26T01:44:26-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mama’s Coding Dreams</title><subtitle>A lovely wonderful blog that records my journey of coding while my baby falls asleep.</subtitle><author><name>Michelle CH Lin</name></author><entry><title type="html">100 Days Of Code Challenge - Front-End Cert-BOOTSTRAP</title><link href="http://localhost:4000/web%20design/Bootstrap/" rel="alternate" type="text/html" title="100 Days Of Code Challenge - Front-End Cert-BOOTSTRAP" /><published>2020-03-22T00:00:00-04:00</published><updated>2020-03-22T00:00:00-04:00</updated><id>http://localhost:4000/web%20design/Bootstrap</id><content type="html" xml:base="http://localhost:4000/web%20design/Bootstrap/">&lt;h2 id=&quot;bootstrap-grid&quot;&gt;Bootstrap grid&lt;/h2&gt;
&lt;p&gt;Powerful system that can make the webpage design more dynamic and flexible across multiple devices. It allows up to 12 column across the page and more than that columns will stack up no matter the viewpoint. It is responsive, so the columns will re-arrange depending on the screen size.&lt;/p&gt;

&lt;h2 id=&quot;grid-classes&quot;&gt;Grid Classes&lt;/h2&gt;
&lt;p&gt;The Bootstrap grid system has four classes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt; (for phones - screens less than 768px wide)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sm&lt;/code&gt; (for tablets - screens equal to or greater than 768px wide)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;md&lt;/code&gt; (for small laptops - screens equal to or greater than 992px wide)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lg&lt;/code&gt; (for laptops and desktops - screens equal to or greater than 1200px wide)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic-structure-as-following&quot;&gt;Basic Structure as following:&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    ...
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;what-i-learn-about-bootstrap&quot;&gt;What I learn about Bootstrap?&lt;/h2&gt;

&lt;p&gt;Get started with Bootstrap, the pages need to be ready for latest design and development standards.
HTML5 DOCTYPE and meta tag for proper responsive behave are also required.&lt;/p&gt;

&lt;p&gt;Below is starter template:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;!-- Required meta tags --&amp;gt;
  &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
  &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,
  initial-scale=1, shrink-to-fit=no&quot;&amp;gt;

  &amp;lt;!-- Bootstrap CSS --&amp;gt;
  &amp;lt;link rel=&quot;stylesheet&quot;
  href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css&quot;
  integrity=&quot;sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO&quot;
  crossorigin=&quot;anonymous&quot;&amp;gt;

  &amp;lt;!-- Optional JavaScript --&amp;gt;
    &amp;lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&amp;gt;
    &amp;lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js&quot; integrity=&quot;sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js&quot; integrity=&quot;sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-jquery-playground&quot;&gt;Create jQuery Playground&lt;/h2&gt;

&lt;p&gt;Enjoy the Coding practice line by line through freecodecamp lessons:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- Only change code above this line.
  --&amp;gt;
&amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
  &amp;lt;h3 class=&quot;text-primary text-center&quot;&amp;gt;jQuery Playground&amp;lt;/h3&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;div class=&quot;col-xs-6&quot;&amp;gt;
      &amp;lt;h4&amp;gt;#left-well&amp;lt;/h4&amp;gt;
      &amp;lt;div class=&quot;well&quot; id=&quot;left-well&quot;&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target1&quot;&amp;gt;#target1&amp;lt;/button&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target2&quot;&amp;gt;#target2&amp;lt;/button&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target3&quot;&amp;gt;#target3&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-xs-6&quot;&amp;gt;
      &amp;lt;h4&amp;gt;#right-well&amp;lt;/h4&amp;gt;
      &amp;lt;div class=&quot;well&quot; id=&quot;right-well&quot;&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target4&quot;&amp;gt;#target4&amp;lt;/button&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target5&quot;&amp;gt;#target5&amp;lt;/button&amp;gt;
        &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target6&quot;&amp;gt;#target6&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;useful-links-for-future-project&quot;&gt;Useful links for future project&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;GetBootstarp BLOG&lt;/a&gt;&lt;/p&gt;</content><author><name>Michelle CH Lin</name></author><category term="100DaysOfCode" /><category term="Bootstrap" /><category term="HTML" /><summary type="html">Bootstrap grid Powerful system that can make the webpage design more dynamic and flexible across multiple devices. It allows up to 12 column across the page and more than that columns will stack up no matter the viewpoint. It is responsive, so the columns will re-arrange depending on the screen size. Grid Classes The Bootstrap grid system has four classes: xs (for phones - screens less than 768px wide) sm (for tablets - screens equal to or greater than 768px wide) md (for small laptops - screens equal to or greater than 992px wide) lg (for laptops and desktops - screens equal to or greater than 1200px wide) Basic Structure as following: &amp;lt;div class=&quot;container&quot;&amp;gt; &amp;lt;div class=&quot;row&quot;&amp;gt; &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;row&quot;&amp;gt; &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;col-*-*&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;row&quot;&amp;gt; ... &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; What I learn about Bootstrap? Get started with Bootstrap, the pages need to be ready for latest design and development standards. HTML5 DOCTYPE and meta tag for proper responsive behave are also required. Below is starter template: &amp;lt;!-- Required meta tags --&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&amp;gt; &amp;lt;!-- Bootstrap CSS --&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css&quot; integrity=&quot;sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO&quot; crossorigin=&quot;anonymous&quot;&amp;gt; &amp;lt;!-- Optional JavaScript --&amp;gt; &amp;lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&amp;gt; &amp;lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js&quot; integrity=&quot;sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js&quot; integrity=&quot;sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt; Create jQuery Playground Enjoy the Coding practice line by line through freecodecamp lessons: &amp;lt;!-- Only change code above this line. --&amp;gt; &amp;lt;div class=&quot;container-fluid&quot;&amp;gt; &amp;lt;h3 class=&quot;text-primary text-center&quot;&amp;gt;jQuery Playground&amp;lt;/h3&amp;gt; &amp;lt;div class=&quot;row&quot;&amp;gt; &amp;lt;div class=&quot;col-xs-6&quot;&amp;gt; &amp;lt;h4&amp;gt;#left-well&amp;lt;/h4&amp;gt; &amp;lt;div class=&quot;well&quot; id=&quot;left-well&quot;&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target1&quot;&amp;gt;#target1&amp;lt;/button&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target2&quot;&amp;gt;#target2&amp;lt;/button&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target3&quot;&amp;gt;#target3&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;col-xs-6&quot;&amp;gt; &amp;lt;h4&amp;gt;#right-well&amp;lt;/h4&amp;gt; &amp;lt;div class=&quot;well&quot; id=&quot;right-well&quot;&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target4&quot;&amp;gt;#target4&amp;lt;/button&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target5&quot;&amp;gt;#target5&amp;lt;/button&amp;gt; &amp;lt;button class=&quot;btn btn-default target&quot; id=&quot;target6&quot;&amp;gt;#target6&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; Useful links for future project GetBootstarp BLOG</summary></entry><entry><title type="html">A Journey Into Deep Learning - II. NLP</title><link href="http://localhost:4000/data%20science/RNN-for-text-classification/" rel="alternate" type="text/html" title="A Journey Into Deep Learning - II. NLP" /><published>2020-03-16T00:00:00-04:00</published><updated>2020-03-16T00:00:00-04:00</updated><id>http://localhost:4000/data%20science/RNN%20for%20text%20classification</id><content type="html" xml:base="http://localhost:4000/data%20science/RNN-for-text-classification/">&lt;h2 id=&quot;nlp-for-text-generation-with-rnns&quot;&gt;NLP for Text Generation with RNNs&lt;/h2&gt;

&lt;h3 id=&quot;what-is-the-nlp&quot;&gt;What is the NLP?&lt;/h3&gt;

&lt;p&gt;Natural Language Processing (NLP) extract useful information from the given text or sentence using machine learning and deep learning techniques. The techniques requires text being converted to a set of real number (a vector).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The process of converting text into numbers are called Vectorization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great summary in &lt;a href=&quot;https://towardsdatascience.com/understanding-nlp-word-embeddings-text-vectorization-1a23744f7223&quot;&gt;Prabhu’s blog&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;how-do-we-do-to-generate-the-useful-text&quot;&gt;How do we do to generate the useful text?&lt;/h3&gt;

&lt;p&gt;The course demonstrates how to use a &lt;a href=&quot;https://en.wikipedia.org/wiki/Recurrent_neural_network&quot;&gt;recurrent neural network (RNN)&lt;/a&gt; to generate text. Process could be done character by character.
Details in &lt;a href=&quot;http://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;Andrej Karpathy blog&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-0---importing-main-libraries&quot;&gt;Step 0 - Importing main libraries&lt;/h3&gt;
&lt;p&gt;Libraries are always required:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-1---import-text--understand-the-characters&quot;&gt;Step 1 - import text &amp;amp; understand the characters&lt;/h3&gt;
&lt;p&gt;Free text is available &lt;a href=&quot;https://www.gutenberg.org/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Importing text:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;path_to_file = 'FILENAME.txt'
text = open(path_to_file, 'r').read()
print(text[:1000])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Understanding the characters:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vocab = sorted(set(text))
print(vocab)
len(vocab)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set()&lt;/code&gt; where parameters could be list, tuple or dictionary&lt;/p&gt;

&lt;h3 id=&quot;step-2---text-processing&quot;&gt;Step 2 - text processing&lt;/h3&gt;

&lt;p&gt;As a neural network can’t work with string data, the process of converting text into number is required. So, this section need to create dictionaries that can go from numeric index to character and character to numeric index.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;char_to_ind = {char:ind for ind, char in enumerate(vocab)}
char_to_ind['H']
#33

ind_to_char = np.array(vocab)
ind_to_char[33]
#'H'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;enumerate&lt;/code&gt; is a built-in function of Python, which allows us to loop over something and have an automatic counter.&lt;/p&gt;

&lt;p&gt;Create Mapping so we can go back and forth from char to num:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# encode text into text.array
encoded_text = np.array[char_to_ind[c] for c in text]
# Get the text
sample = text[:20]
# Parallel num for the text
encoded_text[:20]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-3---create-batches&quot;&gt;Step 3 - create batches&lt;/h3&gt;</content><author><name>Michelle CH Lin</name></author><category term="Udemy" /><category term="Python" /><category term="TensorFlow" /><summary type="html">NLP for Text Generation with RNNs What is the NLP? Natural Language Processing (NLP) extract useful information from the given text or sentence using machine learning and deep learning techniques. The techniques requires text being converted to a set of real number (a vector). The process of converting text into numbers are called Vectorization. Great summary in Prabhu’s blog. How do we do to generate the useful text? The course demonstrates how to use a recurrent neural network (RNN) to generate text. Process could be done character by character. Details in Andrej Karpathy blog Step 0 - Importing main libraries Libraries are always required: import numpy as np import pandas as pd import matplotlib.pyplot as plt import tensorflow as tf Step 1 - import text &amp;amp; understand the characters Free text is available here Importing text: path_to_file = 'FILENAME.txt' text = open(path_to_file, 'r').read() print(text[:1000]) Understanding the characters: vocab = sorted(set(text)) print(vocab) len(vocab) set() where parameters could be list, tuple or dictionary Step 2 - text processing As a neural network can’t work with string data, the process of converting text into number is required. So, this section need to create dictionaries that can go from numeric index to character and character to numeric index. char_to_ind = {char:ind for ind, char in enumerate(vocab)} char_to_ind['H'] #33 ind_to_char = np.array(vocab) ind_to_char[33] #'H' Note: enumerate is a built-in function of Python, which allows us to loop over something and have an automatic counter. Create Mapping so we can go back and forth from char to num: # encode text into text.array encoded_text = np.array[char_to_ind[c] for c in text] # Get the text sample = text[:20] # Parallel num for the text encoded_text[:20] Step 3 - create batches</summary></entry><entry><title type="html">A Journey Into Deep Learning - I. Goal</title><link href="http://localhost:4000/data%20science/Setup-Python-Tensorflow-Environment/" rel="alternate" type="text/html" title="A Journey Into Deep Learning - I. Goal" /><published>2020-03-14T00:00:00-04:00</published><updated>2020-03-14T00:00:00-04:00</updated><id>http://localhost:4000/data%20science/Setup-Python-Tensorflow-Environment</id><content type="html" xml:base="http://localhost:4000/data%20science/Setup-Python-Tensorflow-Environment/">&lt;p&gt;As I am thinking of self-learning Machine Learning (ML), I want to quickly pick up the skills and foundation of Python. &lt;em&gt;(I used more with R, Matlab during my PhD work)&lt;/em&gt;. So, since last year when I was at 9-month pregnancy, I’ve completed &lt;a href=&quot;https://www.udemy.com/course/python-for-data-science-and-machine-learning-bootcamp/&quot;&gt;Python for Data Science and ML Bootcamp&lt;/a&gt;, instructed by Jose Portilla. Today, I have some sorts of feeling that I know what I was doing as a mom (~ 6 months after giving birth). Then, I grab and read a book &lt;em&gt;The Algebra of Happiness&lt;/em&gt;, make a coffee, and open my MacBook - thinking, I’d like to continue to learn more about ML as I have been always fascinated with data. In between my baby sleep-wake cycle, I read and code and write down what I did, even just a little bit.&lt;/p&gt;

&lt;p&gt;On Saturday March 14, the world is fighting with coronavirus and my world is thrilling that I start the journey of learning new things, from this course &lt;a href=&quot;https://www.udemy.com/course/complete-tensorflow-2-and-keras-deep-learning-bootcamp/&quot;&gt;Tensorflow 2 and Keras Deep Learning Bootcamp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hopefully, I can start making fun project soon through applying what I’ve learned every single time I have when my baby fall asleep and/or take a nap. Here I make notes of every steps and accomplishment, &lt;strong&gt;even just a little bit&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don’t hate machine learning for being simple. Levers are simple too, but they can move the world.
-Cassie Kozyrkov&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tensorflow-setup-and-install&quot;&gt;TensorFlow Setup and Install&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Here are the notes for myself:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Downland Python 3.7 Version from &lt;a href=&quot;https://www.anaconda.com/distribution/&quot;&gt;Anaconda&lt;/a&gt; for MacOS&lt;/li&gt;
  &lt;li&gt;Create a folder, named “TensorFlow” under Desktop/Gitproject/&lt;/li&gt;
  &lt;li&gt;Downland the class materials into the created folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What I should do next time for STARTING the course:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Locate the path in terminal with this code &lt;code class=&quot;highlighter-rouge&quot;&gt;% cd Desktop/Gitproject/TensorFlow&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Open terminal and type &lt;code class=&quot;highlighter-rouge&quot;&gt;% conda activate mytfenv&lt;/code&gt;for setup TensorFlow Environment&lt;/li&gt;
  &lt;li&gt;Get into virtual env using &lt;code class=&quot;highlighter-rouge&quot;&gt;% jupyter notebook&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Michelle CH Lin</name></author><category term="Udemy" /><category term="Python" /><category term="TensorFlow" /><summary type="html">As I am thinking of self-learning Machine Learning (ML), I want to quickly pick up the skills and foundation of Python. (I used more with R, Matlab during my PhD work). So, since last year when I was at 9-month pregnancy, I’ve completed Python for Data Science and ML Bootcamp, instructed by Jose Portilla. Today, I have some sorts of feeling that I know what I was doing as a mom (~ 6 months after giving birth). Then, I grab and read a book The Algebra of Happiness, make a coffee, and open my MacBook - thinking, I’d like to continue to learn more about ML as I have been always fascinated with data. In between my baby sleep-wake cycle, I read and code and write down what I did, even just a little bit. On Saturday March 14, the world is fighting with coronavirus and my world is thrilling that I start the journey of learning new things, from this course Tensorflow 2 and Keras Deep Learning Bootcamp. Hopefully, I can start making fun project soon through applying what I’ve learned every single time I have when my baby fall asleep and/or take a nap. Here I make notes of every steps and accomplishment, even just a little bit. Don’t hate machine learning for being simple. Levers are simple too, but they can move the world. -Cassie Kozyrkov TensorFlow Setup and Install Here are the notes for myself: Downland Python 3.7 Version from Anaconda for MacOS Create a folder, named “TensorFlow” under Desktop/Gitproject/ Downland the class materials into the created folder What I should do next time for STARTING the course: Locate the path in terminal with this code % cd Desktop/Gitproject/TensorFlow Open terminal and type % conda activate mytfenvfor setup TensorFlow Environment Get into virtual env using % jupyter notebook</summary></entry><entry><title type="html">100 Days Of Code Challenge- Web Cert-Projects</title><link href="http://localhost:4000/web%20design/100Days-of-Code-WebProject/" rel="alternate" type="text/html" title="100 Days Of Code Challenge- Web Cert-Projects" /><published>2020-02-28T00:00:00-05:00</published><updated>2020-02-28T00:00:00-05:00</updated><id>http://localhost:4000/web%20design/100Days-of-Code-WebProject</id><content type="html" xml:base="http://localhost:4000/web%20design/100Days-of-Code-WebProject/">&lt;p&gt;&lt;strong&gt;This is the log for the 2nd week:&lt;/strong&gt;
I’ will build a little by little for reviewing what i was done later on.&lt;/p&gt;</content><author><name>Michelle CH Lin</name></author><category term="100DaysOfCode" /><category term="CSS" /><category term="HTML" /><summary type="html">This is the log for the 2nd week: I’ will build a little by little for reviewing what i was done later on.</summary></entry><entry><title type="html">Learning Notes For CSS</title><link href="http://localhost:4000/web%20design/Notes-1/" rel="alternate" type="text/html" title="Learning Notes For CSS" /><published>2020-02-27T00:00:00-05:00</published><updated>2020-02-27T00:00:00-05:00</updated><id>http://localhost:4000/web%20design/Notes-1</id><content type="html" xml:base="http://localhost:4000/web%20design/Notes-1/">&lt;p&gt;I used to design webpages for hosting Taiwan Ocean Science Meeting Events while I worked at Academic Sinica, Taipei (7 years ago). So, CSS is not completely new to me. Given that CSS has changed quite substantially in the last few years, participating the &lt;a href=&quot;https://codepen.io/michellechlin/full/mdJEVOv&quot;&gt;Product Landing Project&lt;/a&gt; in &lt;strong&gt;FreeCodeCamp&lt;/strong&gt; is really good for myself to refresh the knowledge.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Even if CSS is very small part of what I need to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I know I did not need to memorize every CSS syntax and values; however, making notes will make CSS much easier to use in the future.&lt;/p&gt;

&lt;h2 id=&quot;css-layout---float-and-clear&quot;&gt;CSS Layout - float and clear&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; is used to positioning and formatting content.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt; is used to specify what elements can float beside the cleared element and on which side.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;box-sizing&lt;/code&gt; defines how width and height of the element&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;overflow&lt;/code&gt; specifies what happens if content overflows an elements’s box&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clearfix&lt;/code&gt; works well when you want to control the margins and padding&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;::after&lt;/code&gt; is pseudo-element&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;style&amp;gt;
* {  
  box-sizing: border-box;
}

.image-container {
  float: left;
  width: 50%; /*for two images*/
  padding: 5px; /* build space between the images */
}

.clearfix::after {
  content: &quot;&quot;;
  clear: both;
  display: table;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;##&lt;/p&gt;

&lt;h2 id=&quot;resources-for-future-uses&quot;&gt;Resources for future uses:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/default.asp&quot;&gt;w3schools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://htmlcolorcodes.com/color-chart/&quot;&gt;HTML Color Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Michelle CH Lin</name></author><category term="FreeCodeCamp" /><category term="CSS" /><category term="HTML" /><summary type="html">I used to design webpages for hosting Taiwan Ocean Science Meeting Events while I worked at Academic Sinica, Taipei (7 years ago). So, CSS is not completely new to me. Given that CSS has changed quite substantially in the last few years, participating the Product Landing Project in FreeCodeCamp is really good for myself to refresh the knowledge. Even if CSS is very small part of what I need to do. I know I did not need to memorize every CSS syntax and values; however, making notes will make CSS much easier to use in the future. CSS Layout - float and clear float is used to positioning and formatting content. clear is used to specify what elements can float beside the cleared element and on which side. box-sizing defines how width and height of the element overflow specifies what happens if content overflows an elements’s box clearfix works well when you want to control the margins and padding ::after is pseudo-element &amp;lt;style&amp;gt; * { box-sizing: border-box; } .image-container { float: left; width: 50%; /*for two images*/ padding: 5px; /* build space between the images */ } .clearfix::after { content: &quot;&quot;; clear: both; display: table; } ## Resources for future uses: w3schools HTML Color Code</summary></entry><entry><title type="html">100 Days Of Code Challenge- Web Cert</title><link href="http://localhost:4000/web%20design/100Days-of-Code-WebCert/" rel="alternate" type="text/html" title="100 Days Of Code Challenge- Web Cert" /><published>2020-02-14T00:00:00-05:00</published><updated>2020-02-14T00:00:00-05:00</updated><id>http://localhost:4000/web%20design/100Days-of-Code-WebCert</id><content type="html" xml:base="http://localhost:4000/web%20design/100Days-of-Code-WebCert/">&lt;style&gt;
li{
  list-style-type: disc;
}
&lt;/style&gt;

&lt;p&gt;&lt;strong&gt;This Is The Log For What I’ve learned:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;Day 1:
    &lt;ul&gt;
      &lt;li&gt;Learn Basic HTML &amp;amp; HTML5&lt;/li&gt;
      &lt;li&gt;Create my Github page&lt;/li&gt;
    &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day 2:
    &lt;ul&gt;
      &lt;li&gt;Continue to Learn HTML &amp;amp; HTML5&lt;/li&gt;
      &lt;li&gt; Setup local work environment with Atom, GitKraken&lt;/li&gt;
    &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day 3:
  &lt;ul&gt;
    &lt;li&gt;Learn CSS Style&lt;/li&gt;
    &lt;li&gt;Learn Jekyll blogging&lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day 4:
  &lt;ul&gt;
     &lt;li&gt;Done 35% of Applied Visual Design &lt;/li&gt;
     &lt;li&gt;Get familiar with &lt;a href=&quot;https://jekyllrb.com/docs/step-by-step/08-blogging/&quot; alt=&quot;&quot;&gt;Jekyll blog&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day 5:
  &lt;ul&gt;
    &lt;li&gt;Learn Applied Visual Design&lt;/li&gt;
    &lt;li&gt;Learn Jekyll Theme&lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day 6:
  &lt;ul&gt;
    &lt;li&gt;Completed Applied Visual Design&lt;/li&gt;
    &lt;li&gt;Jekyll Theme with &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot; alt=&quot;mmistakes&quot;&gt;@mmistakes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Learn git and work jekyll blog in the local&lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day7:
  &lt;ul&gt;
    &lt;li&gt;Completed Design Principles &amp;amp; CSS Flexbox&lt;/li&gt;
    &lt;li&gt;Quarterly  done with CSS Grid &lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;ul&gt;Day8-10:
  &lt;ul&gt;
    &lt;li&gt;Building up the 1st project line by line - Tribute Page for Jane Goodall &lt;a href=&quot;https://codepen.io/michellechlin/full/eYNNrNj&quot; alt=&quot;Tribute Page&quot;&gt;Tribute Page&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;
&lt;a href=&quot;https://code.likeagirl.io/100-days-of-code-challenge-completed-bbce87f04c00&quot;&gt;Her story of completing 100DaysOfCode&lt;/a&gt;
&lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;FreeCodeCamp&lt;/a&gt; &lt;a href=&quot;https://www.codenewbie.org/podcast/100-days-of-code&quot;&gt;Podcast of #100DaysOfCode&lt;/a&gt;&lt;/p&gt;</content><author><name>Michelle CH Lin</name></author><category term="100DaysOfCode" /><category term="CSS" /><category term="HTML" /><summary type="html">This Is The Log For What I’ve learned: Day 1: Learn Basic HTML &amp;amp; HTML5 Create my Github page Day 2: Continue to Learn HTML &amp;amp; HTML5 Setup local work environment with Atom, GitKraken Day 3: Learn CSS Style Learn Jekyll blogging Day 4: Done 35% of Applied Visual Design Get familiar with Jekyll blog Day 5: Learn Applied Visual Design Learn Jekyll Theme Day 6: Completed Applied Visual Design Jekyll Theme with @mmistakes Learn git and work jekyll blog in the local Day7: Completed Design Principles &amp;amp; CSS Flexbox Quarterly done with CSS Grid Day8-10: Building up the 1st project line by line - Tribute Page for Jane Goodall Tribute Page Resources: Her story of completing 100DaysOfCode FreeCodeCamp Podcast of #100DaysOfCode</summary></entry><entry><title type="html">100 Days Of Code Challenge- Goal</title><link href="http://localhost:4000/web%20design/100Days-of-Code-Goal/" rel="alternate" type="text/html" title="100 Days Of Code Challenge- Goal" /><published>2020-02-13T00:00:00-05:00</published><updated>2020-02-13T00:00:00-05:00</updated><id>http://localhost:4000/web%20design/100Days-of-Code-Goal</id><content type="html" xml:base="http://localhost:4000/web%20design/100Days-of-Code-Goal/">&lt;style&gt;
li{
  list-style-type: disc;
}
&lt;/style&gt;

&lt;p&gt;&lt;strong&gt;My Motivation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After quitting my job from &lt;em&gt;Application (R&amp;amp;D) Scientist&lt;/em&gt; at Bay instrument, I kinda slow down my career development and become a stay-at-home mom. I do really enjoy the time with my baby boy, but the feeling of depression and anxiety comes and goes. Being a full-time mom is lack of appreciation or a missing sense of accomplishment compared to what I did before as PhD and/or Scientist. So, I want to change the daily schedule for myself, for a better future, after my boy go to preK. Here I commit myself to take &lt;a href=&quot;https://https://www.100daysofcode.com/&quot;&gt;100 Days of Code Challenge&lt;/a&gt; where I spend at least one hour coding for 100 days (in a row).&lt;/p&gt;

&lt;p&gt;Jane Goodall once said:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;What you do makes a difference, and you have to decide
what kind of difference you want to make.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My big motivation for taking this challenge is &lt;strong&gt;Learn to Code&lt;/strong&gt; to make a difference in changing people’s life.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This Is My Main Goals:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;1. Complete all &lt;strong&gt;FreeCampCode&lt;/strong&gt; Certificate&lt;/ul&gt;
&lt;ul&gt;2. Run my own Tech blog&lt;/ul&gt;
&lt;ul&gt;3. Learn Deep Learning in Python&lt;/ul&gt;
&lt;ul&gt;4. Prepare AWS SA Associated certificate&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;Sounds like a crazy plan while nursing a baby. But at least I give it a try. I really like to keep up the tech outside of world. So, I will always feel confident going back to work in two-three years later. Here, I diversify the goals from web language, python to cloud computing AWS service. Hopefully, more projects could be done after all those commitments for &lt;code class=&quot;highlighter-rouge&quot;&gt;100DaysOfCode&lt;/code&gt; Challenge. Let’s see what a crazy mom can do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;
&lt;a href=&quot;https://code.likeagirl.io/100-days-of-code-challenge-completed-bbce87f04c00&quot;&gt;Her story of completing 100DaysOfCode&lt;/a&gt;
&lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;FreeCodeCamp&lt;/a&gt; &lt;a href=&quot;https://www.codenewbie.org/podcast/100-days-of-code&quot;&gt;Podcast of #100DaysOfCode&lt;/a&gt;&lt;/p&gt;</content><author><name>Michelle CH Lin</name></author><category term="100DaysOfCode" /><category term="CSS" /><category term="HTML" /><summary type="html">My Motivation: After quitting my job from Application (R&amp;amp;D) Scientist at Bay instrument, I kinda slow down my career development and become a stay-at-home mom. I do really enjoy the time with my baby boy, but the feeling of depression and anxiety comes and goes. Being a full-time mom is lack of appreciation or a missing sense of accomplishment compared to what I did before as PhD and/or Scientist. So, I want to change the daily schedule for myself, for a better future, after my boy go to preK. Here I commit myself to take 100 Days of Code Challenge where I spend at least one hour coding for 100 days (in a row). Jane Goodall once said: What you do makes a difference, and you have to decide what kind of difference you want to make. My big motivation for taking this challenge is Learn to Code to make a difference in changing people’s life. This Is My Main Goals: 1. Complete all FreeCampCode Certificate 2. Run my own Tech blog 3. Learn Deep Learning in Python 4. Prepare AWS SA Associated certificate Sounds like a crazy plan while nursing a baby. But at least I give it a try. I really like to keep up the tech outside of world. So, I will always feel confident going back to work in two-three years later. Here, I diversify the goals from web language, python to cloud computing AWS service. Hopefully, more projects could be done after all those commitments for 100DaysOfCode Challenge. Let’s see what a crazy mom can do. Resources: Her story of completing 100DaysOfCode FreeCodeCamp Podcast of #100DaysOfCode</summary></entry></feed>