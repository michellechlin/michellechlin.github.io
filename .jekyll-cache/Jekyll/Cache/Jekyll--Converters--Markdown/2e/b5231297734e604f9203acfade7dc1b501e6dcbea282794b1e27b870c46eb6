I"6<p>As I am thinking of self-learning Machine Learning (ML), I want to quickly pick up the skills and foundation of Python. <em>(I used more with R, Matlab during my PhD work)</em>. So, since last year when I was at 9-month pregnancy, I’ve completed <a href="https://www.udemy.com/course/python-for-data-science-and-machine-learning-bootcamp/">Python for Data Science and ML Bootcamp</a>, instructed by Jose Portilla. Today, I have some sorts of feeling that I know what I was doing as a mom (~ 6 months after giving birth). Then, I grab and read a book <em>The Algebra of Happiness</em>, make a coffee, and open my MacBook - thinking, I’d like to continue to learn more about ML as I have been always fascinated with data. In between my baby sleep-wake cycle, I read and code and write down what I did, even just a little bit.</p>

<p>On Saturday March 14, the world is fighting with coronavirus and my world is thrilling that I start the journey of learning new things, from this course <a href="https://www.udemy.com/course/complete-tensorflow-2-and-keras-deep-learning-bootcamp/">Tensorflow 2 and Keras Deep Learning Bootcamp</a>.</p>

<p>Hopefully, I can start making fun project soon through applying what I’ve learned every single time I have when my baby fall asleep and/or take a nap. Here I make notes of every steps and accomplishment, <strong>even just a little bit</strong>.</p>

<blockquote>
  <p>Don’t hate machine learning for being simple. Levers are simple too, but they can move the world.
-Cassie Kozyrkov</p>
</blockquote>

<h2 id="day-1-314-tensorflow-setup-and-install">Day-1 (3/14): TensorFlow Setup and Install</h2>

<p><strong>Here are the notes for myself:</strong></p>

<ul>
  <li>Downland Python 3.7 Version from <a href="https://www.anaconda.com/distribution/">Anaconda</a> for MacOS</li>
  <li>Create a folder, named “TensorFlow” under Desktop/Gitproject/</li>
  <li>Downland the class materials into the created folder</li>
</ul>

<p><strong>What I should do next time for STARTING the course:</strong></p>

<ul>
  <li>Locate the path in terminal with this code <code class="highlighter-rouge">% cd Desktop/Gitproject/TensorFlow</code></li>
  <li>Open terminal and type <code class="highlighter-rouge">% conda activate mytfenv</code>for setup TensorFlow Environment</li>
  <li>Get into virtual env using <code class="highlighter-rouge">% jupyter notebook</code></li>
</ul>

<h2 id="day-2-315-nlp-for-text-generation-with-rnns">Day-2 (3/15): NLP for Text Generation with RNNs</h2>

<h4 id="what-is-the-nlp">What is the NLP?</h4>
<p>Natural Language Processing (NLP) extract useful information from the given text or sentence using machine learning and deep learning techniques. The techniques requires text being converted to a set of real number (a vector).</p>

<blockquote>
  <p>The process of converting words into numbers are called Vectorization.</p>
</blockquote>

<p>Great summary in one of article in <a href="https://towardsdatascience.com/understanding-nlp-word-embeddings-text-vectorization-1a23744f7223">Prabhu’s blog</a> that I can try after I have foundation of python needed for doing NLP.</p>

<h4 id="how-do-we-do-to-generate-useful-text">How do we do to generate useful text?</h4>

<p>The course demonstrates how to use a <a href="https://en.wikipedia.org/wiki/Recurrent_neural_network">recurrent neural network (RNN)</a> to generate text. Process could be done character by character.</p>

<p>More theory Details in <a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">Andrej Karpathy blog</a></p>

<p>Before the hands-on practice, importing main libraries are always required:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
</code></pre></div></div>

<h5 id="step-1---importing-text--understand-the-characters">Step 1 - Importing text &amp; Understand the characters</h5>
<ul>
  <li>free text is available <a href="https://www.gutenberg.org/">here</a></li>
  <li>Importing text:
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>path_to_file = 'FILENAME.txt'
text = open(path_to_file, 'r').read()
print(text[:1000])
</code></pre></div>    </div>
  </li>
  <li>Understanding the characters:
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vocab = sorted(set(text))
print(vocab)
len(vocab)
</code></pre></div>    </div>
    <p><code class="highlighter-rouge">set()</code> where parameters could be list, tuple or dictionary</p>
  </li>
</ul>

<h4 id="step-2--">Step 2 -</h4>
:ET